<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="demo__sub__pub_8cpp" kind="file" language="C++">
    <compoundname>demo_sub_pub.cpp</compoundname>
    <includes local="no">chrono</includes>
    <includes local="no">functional</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">cmath</includes>
    <includes local="no">tuple</includes>
    <includes refid="demo__sub__pub_8hpp" local="yes">fqdemo_nodes/demo_sub_pub.hpp</includes>
    <incdepgraph>
      <node id="3">
        <label>functional</label>
      </node>
      <node id="10">
        <label>fqdemo_msgs/msg/num_pwr_result.hpp</label>
      </node>
      <node id="6">
        <label>cmath</label>
      </node>
      <node id="1">
        <label>src/demo_sub_pub.cpp</label>
        <link refid="demo__sub__pub_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="9">
        <label>rclcpp/rclcpp.hpp</label>
      </node>
      <node id="8">
        <label>fqdemo_nodes/demo_sub_pub.hpp</label>
        <link refid="demo__sub__pub_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>tuple</label>
      </node>
      <node id="2">
        <label>chrono</label>
      </node>
      <node id="11">
        <label>fqdemo_msgs/msg/num_pwr_data.hpp</label>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacefqdemo__nodes">fqdemo_nodes</innernamespace>
    <innernamespace refid="namespacestd_1_1chrono__literals">std::chrono_literals</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Copyright<sp/>2021<sp/>R.<sp/>Kent<sp/>James<sp/>&lt;kent@caspia.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tuple&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="demo__sub__pub_8hpp" kindref="compound">fqdemo_nodes/demo_sub_pub.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std::chrono_literals;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::placeholders::_1;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>example<sp/>creates<sp/>a<sp/>subclass<sp/>of<sp/>Node<sp/>and<sp/>uses<sp/>std::bind()<sp/>to<sp/>register<sp/>a</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>member<sp/>function<sp/>as<sp/>a<sp/>callback<sp/>from<sp/>the<sp/>timer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacefqdemo__nodes" kindref="compound">fqdemo_nodes</ref></highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO(rkent):<sp/>implement<sp/>logging<sp/>as<sp/>shown<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/ros-planning/moveit2/blob/main/doc/MIGRATION_GUIDE.md</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">DemoSubPub::DemoSubPub()</highlight></codeline>
<codeline lineno="38"><highlight class="normal">:<sp/>rclcpp::Node(</highlight><highlight class="stringliteral">&quot;demo_sub_pub&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>count_(0)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>publisher_<sp/>=<sp/>this-&gt;create_publisher&lt;fqdemo_msgs::msg::NumPwrResult&gt;(</highlight><highlight class="stringliteral">&quot;power_result&quot;</highlight><highlight class="normal">,<sp/>10);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>subscriber_<sp/>=<sp/>this-&gt;create_subscription&lt;fqdemo_msgs::msg::NumPwrData&gt;(</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;num_power&quot;</highlight><highlight class="normal">,<sp/>10,<sp/>std::bind(&amp;DemoSubPub::topic_callback,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_1));</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>timer_<sp/>=<sp/>this-&gt;create_wall_timer(</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>2000ms,<sp/>std::bind(&amp;DemoSubPub::timer_callback,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">std::tuple&lt;double,<sp/>double&gt;<sp/>DemoSubPub::apply_powers(</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>double_t<sp/>number,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>double_t<sp/>exponent</highlight></codeline>
<codeline lineno="51"><highlight class="normal">)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>to_power<sp/>=<sp/>pow(number,<sp/>exponent);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>to_root<sp/>=<sp/>pow(number,<sp/>1.<sp/>/<sp/>exponent);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::tuple&lt;double,<sp/>double&gt;{to_power,<sp/>to_root};</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DemoSubPub::topic_callback(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fqdemo_msgs::msg::NumPwrData::SharedPtr<sp/>msg)</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>RCLCPP_INFO(this-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;I<sp/>heard:<sp/>&apos;%12.3g,<sp/>%12.3g&apos;&quot;</highlight><highlight class="normal">,<sp/>msg-&gt;num,<sp/>msg-&gt;power);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>message<sp/>=<sp/>fqdemo_msgs::msg::NumPwrResult();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pair<sp/>=<sp/>apply_powers(msg-&gt;num,<sp/>msg-&gt;power);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>message.to_root<sp/>=<sp/>std::get&lt;1&gt;(pair);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>message.to_power<sp/>=<sp/>std::get&lt;0&gt;(pair);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>RCLCPP_INFO(</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;Publishing<sp/>NumPwrResult<sp/>power:<sp/>%12.3g,<sp/>root:<sp/>%12.3g&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>message.to_power,<sp/>message.to_root);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>publisher_-&gt;publish(message);</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DemoSubPub::timer_callback()</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>message<sp/>=<sp/>fqdemo_msgs::msg::NumPwrResult();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>message.to_root<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>message.to_power<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>RCLCPP_INFO(</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;Publishing<sp/>NumPwrResult<sp/>power:<sp/>%12.3g,<sp/>root:<sp/>%12.3g&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>message.to_power,<sp/>message.to_root);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>publisher_-&gt;publish(message);</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>fqdemo_nodes</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/demo_sub_pub.cpp"/>
  </compounddef>
</doxygen>
